---
- name: Configure K3s Server Nodes
  hosts: k3s_servers
  become: yes
  vars:
    k3s_version: "v1.28.8+k3s1"
    k3s_token: "{{ k3s_cluster_token | default('secure-random-token-change-me') }}"
    k3s_server_url: "https://{{ groups['k3s_servers'][0] }}:6443"
    
  tasks:
    - name: Create k3s config directory
      file:
        path: /etc/rancher/k3s
        state: directory
        mode: '0755'

    - name: Download k3s binary
      get_url:
        url: "https://github.com/k3s-io/k3s/releases/download/{{ k3s_version }}/k3s"
        dest: /usr/local/bin/k3s
        mode: '0755'

    - name: Create k3s service file for first server
      template:
        src: k3s-server-init.service.j2
        dest: /etc/systemd/system/k3s.service
      when: inventory_hostname == groups['k3s_servers'][0]
      notify: restart k3s

    - name: Create k3s service file for additional servers
      template:
        src: k3s-server-join.service.j2
        dest: /etc/systemd/system/k3s.service
      when: inventory_hostname != groups['k3s_servers'][0]
      notify: restart k3s

    - name: Enable and start k3s service
      systemd:
        name: k3s
        enabled: yes
        state: started
        daemon_reload: yes

    - name: Wait for k3s to be ready
      wait_for:
        port: 6443
        host: "{{ ansible_default_ipv4.address }}"
        delay: 30
        timeout: 300

    - name: Copy kubeconfig for ubuntu user
      copy:
        src: /etc/rancher/k3s/k3s.yaml
        dest: /home/ubuntu/.kube/config
        remote_src: yes
        owner: ubuntu
        group: ubuntu
        mode: '0600'
      when: inventory_hostname == groups['k3s_servers'][0]

    - name: Create .kube directory for ubuntu user
      file:
        path: /home/ubuntu/.kube
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: '0755'
      when: inventory_hostname == groups['k3s_servers'][0]

  handlers:
    - name: restart k3s
      systemd:
        name: k3s
        state: restarted
